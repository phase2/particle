/*
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Operator Functions
--------------------------------------------------------------------------------
  Operator functions to enhance sass and do grunt calculations.

  These functions should be imported into the system as the first step. These do
  not rely on any direct implementation. They may include community sourced
  functions to enhance sass usage.
--------------------------------------------------------------------------------
*/

/**
 * Concert to Rem
 *   Does the main work of converting to a standardized unit by stripping a number
 *   and multiplying by the rem value.
 */
@function convert-to-rem($value, $base-value) {
  @if ($value != auto) {
    $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  }
  @if ($value == 0rem) {
    $value: 0;
  } // Turn 0rem into 0
  @return $value;
}

/**
 * Rem Calc
 *   Converts any standard CSS measurement to rem.
 *   Call with 1, 2, 3 or 4 parameters. 'px' is not required but supported
 *
 * @example rem-calc(10 20 30px 40);
 *   Numbers are space delimited. If you want to delimit using commas,
 *   wrap it in another pair of parens.
 *
 * @example rem-calc((10, 20, 30, 40px));
*/
@function rem-calc($values, $base-value: 16px) {
  $max: length($values);

  @if $max == 1 {
    @return convert-to-rem(nth($values, 1), $base-value);
  }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append(
      $remValues,
      convert-to-rem(nth($values, $i), $base-value)
    );
  }
  @return $remValues;
}

/**
 * Map Collect
 *   Collect multiple maps into a single large map
 *
 * @link https://gist.github.com/bigglesrocks/d75091700f8f2be5abfe
 *
 * @param $maps
*/
@function map-collect($maps...) {
  $collection: ();

  @each $map in $maps {
    $collection: map-merge($collection, $map);
  }

  @return $collection;
}

/**
 * Map Deep Get
 *   Retrieve map values from sub-map values.
 *
 * @author Hugo Giraudel
 * @access public
 * @param {Map} $map - Map
 * @param {Arglist} $keys - Key chain
 *
 * @return {*} - Desired value
*/
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}
